import org.openapitools.generator.gradle.plugin.tasks.GenerateTask

plugins {
    id 'adyen.sdk-automation-conventions'
}

project.ext {
    generator = 'go'
    templates = 'templates/custom'
    configFile = 'templates/config.yaml'
}

// Service renaming
tasks.named('generatePOSTerminalManagement', GenerateTask) {
    project.ext.serviceName = 'PosTerminalManagementApi'
}

tasks.withType(GenerateTask).configureEach {
    packageName.set(it.name)
    enablePostProcessFile.set(true)
    globalProperties.set([
            'apis'           : '',
            'models'         : '',
            'supportingFiles': 'client.go',
            'apiTests'       : 'false',
            'apiDocs'        : 'false',
            'modelDocs'      : 'false'
    ])
    additionalProperties.set([
            'serviceName': project.ext.serviceName,
    ])
}

// Deployment
project.ext.services.each { Service svc ->
    def deploy = tasks.register("deploy$svc.name", Copy) {
        description "Copy $svc.name files into the repo."
        dependsOn "generate$svc.name"
        from layout.buildDirectory.dir("services/$svc.id")
        include "**/*.go"
        into layout.projectDirectory.dir("repo/src/$svc.id")
    }

    tasks.named(svc.id) { dependsOn deploy }
}

// Services with a RestServiceError model
['generateBalancePlatform', 'generateTransfers', 'generateManagement'].each {
    tasks.named(it, GenerateTask) {
        additionalProperties.put('hasRestServiceError', 'true')
    }
}
